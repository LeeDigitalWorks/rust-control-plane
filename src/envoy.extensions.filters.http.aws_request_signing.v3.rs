// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AwsRequestSigning {
    #[prost(string, tag = "1")]
    pub service_name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub region: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub host_rewrite: ::prost::alloc::string::String,
    #[prost(bool, tag = "4")]
    pub use_unsigned_payload: bool,
    #[prost(message, repeated, tag = "5")]
    pub match_excluded_headers: ::prost::alloc::vec::Vec<
        super::super::super::super::super::r#type::matcher::v3::StringMatcher,
    >,
    #[prost(enumeration = "aws_request_signing::SigningAlgorithm", tag = "6")]
    pub signing_algorithm: i32,
    #[prost(message, optional, tag = "7")]
    pub query_string: ::core::option::Option<aws_request_signing::QueryString>,
}
/// Nested message and enum types in `AwsRequestSigning`.
pub mod aws_request_signing {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct QueryString {
        #[prost(message, optional, tag = "1")]
        pub expiration_time: ::core::option::Option<
            super::super::super::super::super::super::super::google::protobuf::Duration,
        >,
    }
    #[derive(
        Clone,
        Copy,
        Debug,
        PartialEq,
        Eq,
        Hash,
        PartialOrd,
        Ord,
        ::prost::Enumeration
    )]
    #[repr(i32)]
    pub enum SigningAlgorithm {
        AwsSigv4 = 0,
        AwsSigv4a = 1,
    }
    impl SigningAlgorithm {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                SigningAlgorithm::AwsSigv4 => "AWS_SIGV4",
                SigningAlgorithm::AwsSigv4a => "AWS_SIGV4A",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "AWS_SIGV4" => Some(Self::AwsSigv4),
                "AWS_SIGV4A" => Some(Self::AwsSigv4a),
                _ => None,
            }
        }
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AwsRequestSigningPerRoute {
    #[prost(message, optional, tag = "1")]
    pub aws_request_signing: ::core::option::Option<AwsRequestSigning>,
    #[prost(string, tag = "2")]
    pub stat_prefix: ::prost::alloc::string::String,
}
