// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OAuth2Credentials {
    #[prost(string, tag = "1")]
    pub client_id: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "2")]
    pub token_secret: ::core::option::Option<
        super::super::super::super::transport_sockets::tls::v3::SdsSecretConfig,
    >,
    #[prost(message, optional, tag = "4")]
    pub cookie_names: ::core::option::Option<o_auth2_credentials::CookieNames>,
    #[prost(oneof = "o_auth2_credentials::TokenFormation", tags = "3")]
    pub token_formation: ::core::option::Option<o_auth2_credentials::TokenFormation>,
}
/// Nested message and enum types in `OAuth2Credentials`.
pub mod o_auth2_credentials {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct CookieNames {
        #[prost(string, tag = "1")]
        pub bearer_token: ::prost::alloc::string::String,
        #[prost(string, tag = "2")]
        pub oauth_hmac: ::prost::alloc::string::String,
        #[prost(string, tag = "3")]
        pub oauth_expires: ::prost::alloc::string::String,
        #[prost(string, tag = "4")]
        pub id_token: ::prost::alloc::string::String,
        #[prost(string, tag = "5")]
        pub refresh_token: ::prost::alloc::string::String,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum TokenFormation {
        #[prost(message, tag = "3")]
        HmacSecret(
            super::super::super::super::super::transport_sockets::tls::v3::SdsSecretConfig,
        ),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OAuth2Config {
    #[prost(message, optional, tag = "1")]
    pub token_endpoint: ::core::option::Option<
        super::super::super::super::super::config::core::v3::HttpUri,
    >,
    #[prost(string, tag = "2")]
    pub authorization_endpoint: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub credentials: ::core::option::Option<OAuth2Credentials>,
    #[prost(string, tag = "4")]
    pub redirect_uri: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "5")]
    pub redirect_path_matcher: ::core::option::Option<
        super::super::super::super::super::r#type::matcher::v3::PathMatcher,
    >,
    #[prost(message, optional, tag = "6")]
    pub signout_path: ::core::option::Option<
        super::super::super::super::super::r#type::matcher::v3::PathMatcher,
    >,
    #[prost(bool, tag = "7")]
    pub forward_bearer_token: bool,
    #[prost(bool, tag = "16")]
    pub preserve_authorization_header: bool,
    #[prost(message, repeated, tag = "8")]
    pub pass_through_matcher: ::prost::alloc::vec::Vec<
        super::super::super::super::super::config::route::v3::HeaderMatcher,
    >,
    #[prost(string, repeated, tag = "9")]
    pub auth_scopes: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(string, repeated, tag = "10")]
    pub resources: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(enumeration = "o_auth2_config::AuthType", tag = "11")]
    pub auth_type: i32,
    #[prost(message, optional, tag = "12")]
    pub use_refresh_token: ::core::option::Option<
        super::super::super::super::super::super::google::protobuf::BoolValue,
    >,
    #[prost(message, optional, tag = "13")]
    pub default_expires_in: ::core::option::Option<
        super::super::super::super::super::super::google::protobuf::Duration,
    >,
    #[prost(message, repeated, tag = "14")]
    pub deny_redirect_matcher: ::prost::alloc::vec::Vec<
        super::super::super::super::super::config::route::v3::HeaderMatcher,
    >,
    #[prost(message, optional, tag = "15")]
    pub default_refresh_token_expires_in: ::core::option::Option<
        super::super::super::super::super::super::google::protobuf::Duration,
    >,
    #[prost(bool, tag = "17")]
    pub disable_id_token_set_cookie: bool,
}
/// Nested message and enum types in `OAuth2Config`.
pub mod o_auth2_config {
    #[derive(
        Clone,
        Copy,
        Debug,
        PartialEq,
        Eq,
        Hash,
        PartialOrd,
        Ord,
        ::prost::Enumeration
    )]
    #[repr(i32)]
    pub enum AuthType {
        UrlEncodedBody = 0,
        BasicAuth = 1,
    }
    impl AuthType {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                AuthType::UrlEncodedBody => "URL_ENCODED_BODY",
                AuthType::BasicAuth => "BASIC_AUTH",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "URL_ENCODED_BODY" => Some(Self::UrlEncodedBody),
                "BASIC_AUTH" => Some(Self::BasicAuth),
                _ => None,
            }
        }
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OAuth2 {
    #[prost(message, optional, tag = "1")]
    pub config: ::core::option::Option<OAuth2Config>,
}
