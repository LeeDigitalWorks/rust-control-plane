// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ServiceMatchInput {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct HostMatchInput {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PathMatchInput {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct MethodMatchInput {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PropertyMatchInput {
    #[prost(string, tag = "1")]
    pub property_name: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RequestMatchInput {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct KeyValueMatchEntry {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "2")]
    pub string_match: ::core::option::Option<
        super::super::super::super::super::super::r#type::matcher::v3::StringMatcher,
    >,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RequestMatcher {
    #[prost(message, optional, tag = "1")]
    pub host: ::core::option::Option<
        super::super::super::super::super::super::r#type::matcher::v3::StringMatcher,
    >,
    #[prost(message, optional, tag = "2")]
    pub path: ::core::option::Option<
        super::super::super::super::super::super::r#type::matcher::v3::StringMatcher,
    >,
    #[prost(message, optional, tag = "3")]
    pub method: ::core::option::Option<
        super::super::super::super::super::super::r#type::matcher::v3::StringMatcher,
    >,
    #[prost(message, repeated, tag = "4")]
    pub properties: ::prost::alloc::vec::Vec<KeyValueMatchEntry>,
}
