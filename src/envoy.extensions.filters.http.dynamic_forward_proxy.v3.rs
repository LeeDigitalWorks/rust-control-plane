// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FilterConfig {
    #[prost(bool, tag = "2")]
    pub save_upstream_address: bool,
    #[prost(oneof = "filter_config::ImplementationSpecifier", tags = "1, 3")]
    pub implementation_specifier: ::core::option::Option<
        filter_config::ImplementationSpecifier,
    >,
}
/// Nested message and enum types in `FilterConfig`.
pub mod filter_config {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum ImplementationSpecifier {
        #[prost(message, tag = "1")]
        DnsCacheConfig(
            super::super::super::super::super::common::dynamic_forward_proxy::v3::DnsCacheConfig,
        ),
        #[prost(message, tag = "3")]
        SubClusterConfig(super::SubClusterConfig),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PerRouteConfig {
    #[prost(oneof = "per_route_config::HostRewriteSpecifier", tags = "1, 2")]
    pub host_rewrite_specifier: ::core::option::Option<
        per_route_config::HostRewriteSpecifier,
    >,
}
/// Nested message and enum types in `PerRouteConfig`.
pub mod per_route_config {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum HostRewriteSpecifier {
        #[prost(string, tag = "1")]
        HostRewriteLiteral(::prost::alloc::string::String),
        #[prost(string, tag = "2")]
        HostRewriteHeader(::prost::alloc::string::String),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SubClusterConfig {
    #[prost(message, optional, tag = "3")]
    pub cluster_init_timeout: ::core::option::Option<
        super::super::super::super::super::super::google::protobuf::Duration,
    >,
}
