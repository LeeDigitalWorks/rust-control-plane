// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct LocalityLbConfig {
    #[prost(oneof = "locality_lb_config::LocalityConfigSpecifier", tags = "1, 2")]
    pub locality_config_specifier: ::core::option::Option<
        locality_lb_config::LocalityConfigSpecifier,
    >,
}
/// Nested message and enum types in `LocalityLbConfig`.
pub mod locality_lb_config {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct ZoneAwareLbConfig {
        #[prost(message, optional, tag = "1")]
        pub routing_enabled: ::core::option::Option<
            super::super::super::super::super::r#type::v3::Percent,
        >,
        #[prost(message, optional, tag = "2")]
        pub min_cluster_size: ::core::option::Option<
            super::super::super::super::super::super::google::protobuf::UInt64Value,
        >,
        #[prost(bool, tag = "3")]
        pub fail_traffic_on_panic: bool,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct LocalityWeightedLbConfig {}
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Oneof)]
    pub enum LocalityConfigSpecifier {
        #[prost(message, tag = "1")]
        ZoneAwareLbConfig(ZoneAwareLbConfig),
        #[prost(message, tag = "2")]
        LocalityWeightedLbConfig(LocalityWeightedLbConfig),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SlowStartConfig {
    #[prost(message, optional, tag = "1")]
    pub slow_start_window: ::core::option::Option<
        super::super::super::super::super::google::protobuf::Duration,
    >,
    #[prost(message, optional, tag = "2")]
    pub aggression: ::core::option::Option<
        super::super::super::super::config::core::v3::RuntimeDouble,
    >,
    #[prost(message, optional, tag = "3")]
    pub min_weight_percent: ::core::option::Option<
        super::super::super::super::r#type::v3::Percent,
    >,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ConsistentHashingLbConfig {
    #[prost(bool, tag = "1")]
    pub use_hostname_for_hashing: bool,
    #[prost(message, optional, tag = "2")]
    pub hash_balance_factor: ::core::option::Option<
        super::super::super::super::super::google::protobuf::UInt32Value,
    >,
}
