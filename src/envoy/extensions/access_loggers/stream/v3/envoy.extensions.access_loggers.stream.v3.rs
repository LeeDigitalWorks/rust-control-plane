// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StdoutAccessLog {
    #[prost(oneof = "stdout_access_log::AccessLogFormat", tags = "1")]
    pub access_log_format: ::core::option::Option<stdout_access_log::AccessLogFormat>,
}
/// Nested message and enum types in `StdoutAccessLog`.
pub mod stdout_access_log {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum AccessLogFormat {
        #[prost(message, tag = "1")]
        LogFormat(
            super::super::super::super::super::config::core::v3::SubstitutionFormatString,
        ),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StderrAccessLog {
    #[prost(oneof = "stderr_access_log::AccessLogFormat", tags = "1")]
    pub access_log_format: ::core::option::Option<stderr_access_log::AccessLogFormat>,
}
/// Nested message and enum types in `StderrAccessLog`.
pub mod stderr_access_log {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum AccessLogFormat {
        #[prost(message, tag = "1")]
        LogFormat(
            super::super::super::super::super::config::core::v3::SubstitutionFormatString,
        ),
    }
}
