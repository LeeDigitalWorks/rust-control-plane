// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ClusterConfig {
    #[prost(bool, tag = "2")]
    pub allow_insecure_cluster_options: bool,
    #[prost(bool, tag = "3")]
    pub allow_coalesced_connections: bool,
    #[prost(oneof = "cluster_config::ClusterImplementationSpecifier", tags = "1, 4")]
    pub cluster_implementation_specifier: ::core::option::Option<
        cluster_config::ClusterImplementationSpecifier,
    >,
}
/// Nested message and enum types in `ClusterConfig`.
pub mod cluster_config {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum ClusterImplementationSpecifier {
        #[prost(message, tag = "1")]
        DnsCacheConfig(
            super::super::super::super::common::dynamic_forward_proxy::v3::DnsCacheConfig,
        ),
        #[prost(message, tag = "4")]
        SubClustersConfig(super::SubClustersConfig),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SubClustersConfig {
    #[prost(
        enumeration = "super::super::super::super::config::cluster::v3::cluster::LbPolicy",
        tag = "1"
    )]
    pub lb_policy: i32,
    #[prost(message, optional, tag = "2")]
    pub max_sub_clusters: ::core::option::Option<
        super::super::super::super::super::google::protobuf::UInt32Value,
    >,
    #[prost(message, optional, tag = "3")]
    pub sub_cluster_ttl: ::core::option::Option<
        super::super::super::super::super::google::protobuf::Duration,
    >,
    #[prost(message, repeated, tag = "4")]
    pub preresolve_clusters: ::prost::alloc::vec::Vec<
        super::super::super::super::config::core::v3::SocketAddress,
    >,
}
