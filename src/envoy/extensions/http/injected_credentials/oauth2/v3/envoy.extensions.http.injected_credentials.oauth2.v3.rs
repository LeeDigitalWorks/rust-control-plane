// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct OAuth2 {
    #[prost(message, optional, tag = "1")]
    pub token_endpoint: ::core::option::Option<
        super::super::super::super::super::config::core::v3::HttpUri,
    >,
    #[prost(string, repeated, tag = "2")]
    pub scopes: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(message, optional, tag = "4")]
    pub token_fetch_retry_interval: ::core::option::Option<
        super::super::super::super::super::super::google::protobuf::Duration,
    >,
    #[prost(oneof = "o_auth2::FlowType", tags = "3")]
    pub flow_type: ::core::option::Option<o_auth2::FlowType>,
}
/// Nested message and enum types in `OAuth2`.
pub mod o_auth2 {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct ClientCredentials {
        #[prost(string, tag = "1")]
        pub client_id: ::prost::alloc::string::String,
        #[prost(message, optional, tag = "2")]
        pub client_secret: ::core::option::Option<
            super::super::super::super::super::transport_sockets::tls::v3::SdsSecretConfig,
        >,
        #[prost(enumeration = "AuthType", tag = "3")]
        pub auth_type: i32,
    }
    #[derive(
        Clone,
        Copy,
        Debug,
        PartialEq,
        Eq,
        Hash,
        PartialOrd,
        Ord,
        ::prost::Enumeration
    )]
    #[repr(i32)]
    pub enum AuthType {
        BasicAuth = 0,
        UrlEncodedBody = 1,
    }
    impl AuthType {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                AuthType::BasicAuth => "BASIC_AUTH",
                AuthType::UrlEncodedBody => "URL_ENCODED_BODY",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "BASIC_AUTH" => Some(Self::BasicAuth),
                "URL_ENCODED_BODY" => Some(Self::UrlEncodedBody),
                _ => None,
            }
        }
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum FlowType {
        #[prost(message, tag = "3")]
        ClientCredentials(ClientCredentials),
    }
}
