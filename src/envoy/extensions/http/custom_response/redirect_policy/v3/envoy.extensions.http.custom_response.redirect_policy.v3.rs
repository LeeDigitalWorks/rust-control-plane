// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct RedirectPolicy {
    #[prost(message, optional, tag = "3")]
    pub status_code: ::core::option::Option<
        super::super::super::super::super::super::google::protobuf::UInt32Value,
    >,
    #[prost(message, repeated, tag = "4")]
    pub response_headers_to_add: ::prost::alloc::vec::Vec<
        super::super::super::super::super::config::core::v3::HeaderValueOption,
    >,
    #[prost(message, repeated, tag = "5")]
    pub request_headers_to_add: ::prost::alloc::vec::Vec<
        super::super::super::super::super::config::core::v3::HeaderValueOption,
    >,
    #[prost(message, optional, tag = "6")]
    pub modify_request_headers_action: ::core::option::Option<
        super::super::super::super::super::config::core::v3::TypedExtensionConfig,
    >,
    #[prost(oneof = "redirect_policy::RedirectActionSpecifier", tags = "1, 2")]
    pub redirect_action_specifier: ::core::option::Option<
        redirect_policy::RedirectActionSpecifier,
    >,
}
/// Nested message and enum types in `RedirectPolicy`.
pub mod redirect_policy {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum RedirectActionSpecifier {
        #[prost(string, tag = "1")]
        Uri(::prost::alloc::string::String),
        #[prost(message, tag = "2")]
        RedirectAction(
            super::super::super::super::super::super::config::route::v3::RedirectAction,
        ),
    }
}
