// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CapabilityRestrictionConfig {
    #[prost(map = "string, message", tag = "1")]
    pub allowed_capabilities: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        SanitizationConfig,
    >,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct SanitizationConfig {}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct VmConfig {
    #[prost(string, tag = "1")]
    pub vm_id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub runtime: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub code: ::core::option::Option<
        super::super::super::config::core::v3::AsyncDataSource,
    >,
    #[prost(message, optional, tag = "4")]
    pub configuration: ::core::option::Option<
        super::super::super::super::google::protobuf::Any,
    >,
    #[prost(bool, tag = "5")]
    pub allow_precompiled: bool,
    #[prost(bool, tag = "6")]
    pub nack_on_code_cache_miss: bool,
    #[prost(message, optional, tag = "7")]
    pub environment_variables: ::core::option::Option<EnvironmentVariables>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EnvironmentVariables {
    #[prost(string, repeated, tag = "1")]
    pub host_env_keys: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(map = "string, string", tag = "2")]
    pub key_values: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        ::prost::alloc::string::String,
    >,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PluginConfig {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub root_id: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "4")]
    pub configuration: ::core::option::Option<
        super::super::super::super::google::protobuf::Any,
    >,
    #[prost(bool, tag = "5")]
    pub fail_open: bool,
    #[prost(message, optional, tag = "6")]
    pub capability_restriction_config: ::core::option::Option<
        CapabilityRestrictionConfig,
    >,
    #[prost(oneof = "plugin_config::Vm", tags = "3")]
    pub vm: ::core::option::Option<plugin_config::Vm>,
}
/// Nested message and enum types in `PluginConfig`.
pub mod plugin_config {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Vm {
        #[prost(message, tag = "3")]
        VmConfig(super::VmConfig),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct WasmService {
    #[prost(message, optional, tag = "1")]
    pub config: ::core::option::Option<PluginConfig>,
    #[prost(bool, tag = "2")]
    pub singleton: bool,
}
