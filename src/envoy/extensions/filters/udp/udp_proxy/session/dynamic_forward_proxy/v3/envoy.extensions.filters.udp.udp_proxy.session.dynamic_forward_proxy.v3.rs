// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FilterConfig {
    #[prost(string, tag = "1")]
    pub stat_prefix: ::prost::alloc::string::String,
    #[prost(message, optional, tag = "3")]
    pub buffer_options: ::core::option::Option<filter_config::BufferOptions>,
    #[prost(oneof = "filter_config::ImplementationSpecifier", tags = "2")]
    pub implementation_specifier: ::core::option::Option<
        filter_config::ImplementationSpecifier,
    >,
}
/// Nested message and enum types in `FilterConfig`.
pub mod filter_config {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct BufferOptions {
        #[prost(message, optional, tag = "1")]
        pub max_buffered_datagrams: ::core::option::Option<
            super::super::super::super::super::super::super::super::super::google::protobuf::UInt32Value,
        >,
        #[prost(message, optional, tag = "2")]
        pub max_buffered_bytes: ::core::option::Option<
            super::super::super::super::super::super::super::super::super::google::protobuf::UInt64Value,
        >,
    }
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum ImplementationSpecifier {
        #[prost(message, tag = "2")]
        DnsCacheConfig(
            super::super::super::super::super::super::super::common::dynamic_forward_proxy::v3::DnsCacheConfig,
        ),
    }
}
