// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QuicProtocolOptions {
    #[prost(message, optional, tag = "1")]
    pub quic_protocol_options: ::core::option::Option<
        super::super::core::v3::QuicProtocolOptions,
    >,
    #[prost(message, optional, tag = "2")]
    pub idle_timeout: ::core::option::Option<
        super::super::super::super::google::protobuf::Duration,
    >,
    #[prost(message, optional, tag = "3")]
    pub crypto_handshake_timeout: ::core::option::Option<
        super::super::super::super::google::protobuf::Duration,
    >,
    #[prost(message, optional, tag = "4")]
    pub enabled: ::core::option::Option<super::super::core::v3::RuntimeFeatureFlag>,
    #[prost(message, optional, tag = "5")]
    pub packets_to_read_to_connection_count_ratio: ::core::option::Option<
        super::super::super::super::google::protobuf::UInt32Value,
    >,
    #[prost(message, optional, tag = "6")]
    pub crypto_stream_config: ::core::option::Option<
        super::super::core::v3::TypedExtensionConfig,
    >,
    #[prost(message, optional, tag = "7")]
    pub proof_source_config: ::core::option::Option<
        super::super::core::v3::TypedExtensionConfig,
    >,
    #[prost(message, optional, tag = "8")]
    pub connection_id_generator_config: ::core::option::Option<
        super::super::core::v3::TypedExtensionConfig,
    >,
    #[prost(message, optional, tag = "9")]
    pub server_preferred_address_config: ::core::option::Option<
        super::super::core::v3::TypedExtensionConfig,
    >,
    #[prost(message, optional, tag = "10")]
    pub send_disable_active_migration: ::core::option::Option<
        super::super::super::super::google::protobuf::BoolValue,
    >,
    #[prost(message, optional, tag = "11")]
    pub connection_debug_visitor_config: ::core::option::Option<
        super::super::core::v3::TypedExtensionConfig,
    >,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UdpListenerConfig {
    #[prost(message, optional, tag = "5")]
    pub downstream_socket_config: ::core::option::Option<
        super::super::core::v3::UdpSocketConfig,
    >,
    #[prost(message, optional, tag = "7")]
    pub quic_options: ::core::option::Option<QuicProtocolOptions>,
    #[prost(message, optional, tag = "8")]
    pub udp_packet_packet_writer_config: ::core::option::Option<
        super::super::core::v3::TypedExtensionConfig,
    >,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct ActiveRawUdpListenerConfig {}
