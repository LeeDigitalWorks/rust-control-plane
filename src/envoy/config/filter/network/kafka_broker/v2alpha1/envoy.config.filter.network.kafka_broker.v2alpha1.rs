// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct KafkaBroker {
    #[prost(string, tag = "1")]
    pub stat_prefix: ::prost::alloc::string::String,
    #[prost(bool, tag = "2")]
    pub force_response_rewrite: bool,
    #[prost(oneof = "kafka_broker::BrokerAddressRewriteSpec", tags = "3")]
    pub broker_address_rewrite_spec: ::core::option::Option<
        kafka_broker::BrokerAddressRewriteSpec,
    >,
}
/// Nested message and enum types in `KafkaBroker`.
pub mod kafka_broker {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum BrokerAddressRewriteSpec {
        #[prost(message, tag = "3")]
        IdBasedBrokerAddressRewriteSpec(super::IdBasedBrokerRewriteSpec),
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct IdBasedBrokerRewriteSpec {
    #[prost(message, repeated, tag = "1")]
    pub rules: ::prost::alloc::vec::Vec<IdBasedBrokerRewriteRule>,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct IdBasedBrokerRewriteRule {
    #[prost(uint32, tag = "1")]
    pub id: u32,
    #[prost(string, tag = "2")]
    pub host: ::prost::alloc::string::String,
    #[prost(uint32, tag = "3")]
    pub port: u32,
}
