// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Config {
    #[prost(string, tag = "1")]
    pub arn: ::prost::alloc::string::String,
    #[prost(bool, tag = "2")]
    pub payload_passthrough: bool,
    #[prost(enumeration = "config::InvocationMode", tag = "3")]
    pub invocation_mode: i32,
}
/// Nested message and enum types in `Config`.
pub mod config {
    #[derive(
        Clone,
        Copy,
        Debug,
        PartialEq,
        Eq,
        Hash,
        PartialOrd,
        Ord,
        ::prost::Enumeration
    )]
    #[repr(i32)]
    pub enum InvocationMode {
        Synchronous = 0,
        Asynchronous = 1,
    }
    impl InvocationMode {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                InvocationMode::Synchronous => "SYNCHRONOUS",
                InvocationMode::Asynchronous => "ASYNCHRONOUS",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "SYNCHRONOUS" => Some(Self::Synchronous),
                "ASYNCHRONOUS" => Some(Self::Asynchronous),
                _ => None,
            }
        }
    }
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PerRouteConfig {
    #[prost(message, optional, tag = "1")]
    pub invoke_config: ::core::option::Option<Config>,
}
