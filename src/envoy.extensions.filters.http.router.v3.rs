// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Router {
    #[prost(message, optional, tag = "1")]
    pub dynamic_stats: ::core::option::Option<
        super::super::super::super::super::super::google::protobuf::BoolValue,
    >,
    #[deprecated]
    #[prost(bool, tag = "2")]
    pub start_child_span: bool,
    #[prost(message, repeated, tag = "3")]
    pub upstream_log: ::prost::alloc::vec::Vec<
        super::super::super::super::super::config::accesslog::v3::AccessLog,
    >,
    #[prost(message, optional, tag = "9")]
    pub upstream_log_options: ::core::option::Option<router::UpstreamAccessLogOptions>,
    #[prost(bool, tag = "4")]
    pub suppress_envoy_headers: bool,
    #[prost(string, repeated, tag = "5")]
    pub strict_check_headers: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    #[prost(bool, tag = "6")]
    pub respect_expected_rq_timeout: bool,
    #[prost(bool, tag = "7")]
    pub suppress_grpc_request_failure_code_stats: bool,
    #[prost(message, repeated, tag = "8")]
    pub upstream_http_filters: ::prost::alloc::vec::Vec<
        super::super::super::network::http_connection_manager::v3::HttpFilter,
    >,
}
/// Nested message and enum types in `Router`.
pub mod router {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct UpstreamAccessLogOptions {
        #[prost(bool, tag = "1")]
        pub flush_upstream_log_on_upstream_stream: bool,
        #[prost(message, optional, tag = "2")]
        pub upstream_log_flush_interval: ::core::option::Option<
            super::super::super::super::super::super::super::google::protobuf::Duration,
        >,
    }
}
