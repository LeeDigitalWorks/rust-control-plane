// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct RingHash {
    #[prost(enumeration = "ring_hash::HashFunction", tag = "1")]
    pub hash_function: i32,
    #[prost(message, optional, tag = "2")]
    pub minimum_ring_size: ::core::option::Option<
        super::super::super::super::super::google::protobuf::UInt64Value,
    >,
    #[prost(message, optional, tag = "3")]
    pub maximum_ring_size: ::core::option::Option<
        super::super::super::super::super::google::protobuf::UInt64Value,
    >,
    #[deprecated]
    #[prost(bool, tag = "4")]
    pub use_hostname_for_hashing: bool,
    #[deprecated]
    #[prost(message, optional, tag = "5")]
    pub hash_balance_factor: ::core::option::Option<
        super::super::super::super::super::google::protobuf::UInt32Value,
    >,
    #[prost(message, optional, tag = "6")]
    pub consistent_hashing_lb_config: ::core::option::Option<
        super::super::common::v3::ConsistentHashingLbConfig,
    >,
    #[prost(message, optional, tag = "7")]
    pub locality_weighted_lb_config: ::core::option::Option<
        super::super::common::v3::locality_lb_config::LocalityWeightedLbConfig,
    >,
}
/// Nested message and enum types in `RingHash`.
pub mod ring_hash {
    #[derive(
        Clone,
        Copy,
        Debug,
        PartialEq,
        Eq,
        Hash,
        PartialOrd,
        Ord,
        ::prost::Enumeration
    )]
    #[repr(i32)]
    pub enum HashFunction {
        DefaultHash = 0,
        XxHash = 1,
        MurmurHash2 = 2,
    }
    impl HashFunction {
        /// String value of the enum field names used in the ProtoBuf definition.
        ///
        /// The values are not transformed in any way and thus are considered stable
        /// (if the ProtoBuf definition does not change) and safe for programmatic use.
        pub fn as_str_name(&self) -> &'static str {
            match self {
                HashFunction::DefaultHash => "DEFAULT_HASH",
                HashFunction::XxHash => "XX_HASH",
                HashFunction::MurmurHash2 => "MURMUR_HASH_2",
            }
        }
        /// Creates an enum from field names used in the ProtoBuf definition.
        pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
            match value {
                "DEFAULT_HASH" => Some(Self::DefaultHash),
                "XX_HASH" => Some(Self::XxHash),
                "MURMUR_HASH_2" => Some(Self::MurmurHash2),
                _ => None,
            }
        }
    }
}
