// This file is @generated by prost-build.
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Lua {
    #[deprecated]
    #[prost(string, tag = "1")]
    pub inline_code: ::prost::alloc::string::String,
    #[prost(map = "string, message", tag = "2")]
    pub source_codes: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        super::super::super::super::super::config::core::v3::DataSource,
    >,
    #[prost(message, optional, tag = "3")]
    pub default_source_code: ::core::option::Option<
        super::super::super::super::super::config::core::v3::DataSource,
    >,
    #[prost(string, tag = "4")]
    pub stat_prefix: ::prost::alloc::string::String,
}
#[allow(clippy::derive_partial_eq_without_eq)]
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LuaPerRoute {
    #[prost(oneof = "lua_per_route::Override", tags = "1, 2, 3")]
    pub r#override: ::core::option::Option<lua_per_route::Override>,
}
/// Nested message and enum types in `LuaPerRoute`.
pub mod lua_per_route {
    #[allow(clippy::derive_partial_eq_without_eq)]
    #[derive(Clone, PartialEq, ::prost::Oneof)]
    pub enum Override {
        #[prost(bool, tag = "1")]
        Disabled(bool),
        #[prost(string, tag = "2")]
        Name(::prost::alloc::string::String),
        #[prost(message, tag = "3")]
        SourceCode(
            super::super::super::super::super::super::config::core::v3::DataSource,
        ),
    }
}
